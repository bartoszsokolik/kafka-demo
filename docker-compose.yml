version: '3.7'

services:
  grafana:
    image: "grafana/grafana:latest"
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/influxdb.yml:/etc/grafana/provisioning/datasources/influxdb.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/KafkaMailSenderDashboard.json:/var/lib/grafana/dashboards/KafkaMailSenderDashboard.json
      - ./grafana/KafkaSmsSenderDashboard.json:/var/lib/grafana/dashboards/KafkaSmsSenderDashboard.json
      - ./data/grafana-data:/var/lib/grafana

  influxdb:
    image: "influxdb:latest"
    container_name: influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - ./influx/init.sql:/docker-entrypoint-initdb.d/influx_init.iql/
      - ./data/influx-data:/var/lib/influxdb
    environment:
      INFLUXDB_HTTP_AUTH_ENABLED: "true"
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: admin

  prometheus:
    image: "prom/prometheus:latest"
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus

  kafka-zookeeper-2:
    image: "wurstmeister/zookeeper"
    container_name: kafka-zookeeper-2
    hostname: kafka-zookeeper-2
    restart: unless-stopped
    ports:
      - "2181:2181"
    volumes:
      - ./data/zk-data:/data

  kafka-broker-2:
    image: "wurstmeister/kafka"
    container_name: kafka-broker-2
    hostname: kafka-broker-2
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-broker-2
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: kafka-zookeeper-2:2181
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/kafka-data:/data

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.6.2"
    container_name: elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      node.name: elasticsearch
      cluster.initial_master_nodes: elasticsearch
      ES_JAVA_OPTS: -Xms1g -Xmx1g

  logstash:
    image: "docker.elastic.co/logstash/logstash:7.6.2"
    container_name: logstash
    restart: unless-stopped
    command: -f /etc/logstash/conf.d
    ports:
      - "9100:9100"
    volumes:
      - ./logstash/:/etc/logstash/conf.d

  kibana:
    image: "docker.elastic.co/kibana/kibana:7.6.2"
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      SERVER_PORT: 5601
      SERVER_HOST: 0.0.0.0
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200

  kafka-producer:
    container_name: kafka-producer
    build:
      context: .
      dockerfile: ./kafka-producer/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - kafka-broker-2
    environment:
      KAFKA_BOOTSTRAP-SERVERS: http://kafka-broker-2:9092
      KAFKA_TOPIC: test

  kafka-mail-sender:
    container_name: kafka-mail-sender
    build:
      context: .
      dockerfile: ./kafka-mail-sender/Dockerfile
    ports:
      - "8082:8080"
    depends_on:
      - kafka-broker-2
    environment:
      KAFKA_BOOTSTRAP-SERVERS: http://kafka-broker-2:9092
      KAFKA_TOPIC: test
      KAFKA_CONUSMER-GROUP-ID: mail-sender

  kafka-sms-sender:
    container_name: kafka-sms-sender
    build:
      context: .
      dockerfile: ./kafka-sms-sender/Dockerfile
    ports:
      - "8084:8080"
    depends_on:
      - kafka-broker-2
    environment:
      KAFKA_BOOTSTRAP-SERVERS: http://kafka-broker-2:9092
      KAFKA_TOPIC: test
      KAFKA_CONUSMER-GROUP-ID: sms-sender
